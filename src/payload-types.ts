/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    users: User;
    media: Media;
    blog: Blog;
    pages: Page;
    trayectory: Trayectory;
    portfolio: Portfolio;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    blog: BlogSelect<false> | BlogSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    trayectory: TrayectorySelect<false> | TrayectorySelect<true>;
    portfolio: PortfolioSelect<false> | PortfolioSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    webConfig: WebConfig;
  };
  globalsSelect: {
    webConfig: WebConfigSelect<false> | WebConfigSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog".
 */
export interface Blog {
  id: string;
  title: string;
  Layout: (Parrafo | BloqueDeCodigo)[];
  Thumbnail: string | Media;
  Excerpt: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Parrafo".
 */
export interface Parrafo {
  Parrafo: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'parrafo';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BloqueDeCodigo".
 */
export interface BloqueDeCodigo {
  BloqueDeCodigo: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'CodeBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  Layout: (Hero | Carrusel | BlogReference | PortfolioReference)[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero".
 */
export interface Hero {
  title: string;
  subtitle: string;
  SplineAnimationLink: string;
  ShowCircleBackground?: boolean | null;
  SplineAnimationImage: string | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'hero';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Carrusel".
 */
export interface Carrusel {
  CarruselWrapper: (HeroTwo | CarruselImages | CarruselTrayectory)[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'carrusel';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroTwo".
 */
export interface HeroTwo {
  title: string;
  Content: string;
  Photo: string | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'heroTwo';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CarruselImages".
 */
export interface CarruselImages {
  TitleCarrusel: string;
  CarruselImages: (string | Media)[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'carruselTwo';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CarruselTrayectory".
 */
export interface CarruselTrayectory {
  TitleCarrusel: string;
  TrayectoryPost: (string | Trayectory)[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'carruselThree';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "trayectory".
 */
export interface Trayectory {
  id: string;
  title: string;
  description: string;
  image: string | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BlogReference".
 */
export interface BlogReference {
  Title: string;
  TitlePosition?: ('left' | 'right') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'blogReference';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PortfolioReference".
 */
export interface PortfolioReference {
  Title: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'portfolioReference';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "portfolio".
 */
export interface Portfolio {
  id: string;
  title: string;
  image: string | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'blog';
        value: string | Blog;
      } | null)
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'trayectory';
        value: string | Trayectory;
      } | null)
    | ({
        relationTo: 'portfolio';
        value: string | Portfolio;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog_select".
 */
export interface BlogSelect<T extends boolean = true> {
  title?: T;
  Layout?:
    | T
    | {
        parrafo?: T | ParrafoSelect<T>;
        CodeBlock?: T | BloqueDeCodigoSelect<T>;
      };
  Thumbnail?: T;
  Excerpt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Parrafo_select".
 */
export interface ParrafoSelect<T extends boolean = true> {
  Parrafo?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BloqueDeCodigo_select".
 */
export interface BloqueDeCodigoSelect<T extends boolean = true> {
  BloqueDeCodigo?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  Layout?:
    | T
    | {
        hero?: T | HeroSelect<T>;
        carrusel?: T | CarruselSelect<T>;
        blogReference?: T | BlogReferenceSelect<T>;
        portfolioReference?: T | PortfolioReferenceSelect<T>;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero_select".
 */
export interface HeroSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  SplineAnimationLink?: T;
  ShowCircleBackground?: T;
  SplineAnimationImage?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Carrusel_select".
 */
export interface CarruselSelect<T extends boolean = true> {
  CarruselWrapper?:
    | T
    | {
        heroTwo?: T | HeroTwoSelect<T>;
        carruselTwo?: T | CarruselImagesSelect<T>;
        carruselThree?: T | CarruselTrayectorySelect<T>;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroTwo_select".
 */
export interface HeroTwoSelect<T extends boolean = true> {
  title?: T;
  Content?: T;
  Photo?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CarruselImages_select".
 */
export interface CarruselImagesSelect<T extends boolean = true> {
  TitleCarrusel?: T;
  CarruselImages?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CarruselTrayectory_select".
 */
export interface CarruselTrayectorySelect<T extends boolean = true> {
  TitleCarrusel?: T;
  TrayectoryPost?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BlogReference_select".
 */
export interface BlogReferenceSelect<T extends boolean = true> {
  Title?: T;
  TitlePosition?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PortfolioReference_select".
 */
export interface PortfolioReferenceSelect<T extends boolean = true> {
  Title?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "trayectory_select".
 */
export interface TrayectorySelect<T extends boolean = true> {
  title?: T;
  description?: T;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "portfolio_select".
 */
export interface PortfolioSelect<T extends boolean = true> {
  title?: T;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "webConfig".
 */
export interface WebConfig {
  id: string;
  Logo: string | Media;
  IdDeLaPaginaDeInicio: string;
  NavBarLinks?:
    | {
        Section: string;
        idSection: string;
        id?: string | null;
      }[]
    | null;
  SocialLinks: {
    title: string;
    url: string;
    icon: string;
    id?: string | null;
  }[];
  Email: string;
  title: string;
  description: string;
  ScriptsHeader?: Script[] | null;
  ScriptsFooter?: Script[] | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "script".
 */
export interface Script {
  ScriptHTML: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'script-html';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "webConfig_select".
 */
export interface WebConfigSelect<T extends boolean = true> {
  Logo?: T;
  IdDeLaPaginaDeInicio?: T;
  NavBarLinks?:
    | T
    | {
        Section?: T;
        idSection?: T;
        id?: T;
      };
  SocialLinks?:
    | T
    | {
        title?: T;
        url?: T;
        icon?: T;
        id?: T;
      };
  Email?: T;
  title?: T;
  description?: T;
  ScriptsHeader?:
    | T
    | {
        'script-html'?: T | ScriptSelect<T>;
      };
  ScriptsFooter?:
    | T
    | {
        'script-html'?: T | ScriptSelect<T>;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "script_select".
 */
export interface ScriptSelect<T extends boolean = true> {
  ScriptHTML?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}