/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    media: Media;
    blog: Blog;
    pages: Page;
    trayectory: Trayectory;
    portfolio: Portfolio;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    webConfig: WebConfig;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog".
 */
export interface Blog {
  id: string;
  title: string;
  Layout: (Parrafo | BloqueDeCodigo)[];
  Thumbnail: string | Media;
  Excerpt: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Parrafo".
 */
export interface Parrafo {
  Parrafo: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'parrafo';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BloqueDeCodigo".
 */
export interface BloqueDeCodigo {
  BloqueDeCodigo: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'CodeBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  Layout: (Hero | Carrusel | BlogReference | PortfolioReference)[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero".
 */
export interface Hero {
  title: string;
  subtitle: string;
  SplineAnimationLink: string;
  ShowCircleBackground?: boolean | null;
  SplineAnimationImage: string | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'hero';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Carrusel".
 */
export interface Carrusel {
  CarruselWrapper: (HeroTwo | CarruselImages | CarruselTrayectory)[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'carrusel';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroTwo".
 */
export interface HeroTwo {
  title: string;
  Content: string;
  Photo: string | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'heroTwo';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CarruselImages".
 */
export interface CarruselImages {
  TitleCarrusel: string;
  CarruselImages: (string | Media)[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'carruselTwo';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CarruselTrayectory".
 */
export interface CarruselTrayectory {
  TitleCarrusel: string;
  TrayectoryPost: (string | Trayectory)[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'carruselThree';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "trayectory".
 */
export interface Trayectory {
  id: string;
  title: string;
  description: string;
  image: string | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BlogReference".
 */
export interface BlogReference {
  Title: string;
  TitlePosition?: ('left' | 'right') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'blogReference';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PortfolioReference".
 */
export interface PortfolioReference {
  Title: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'portfolioReference';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "portfolio".
 */
export interface Portfolio {
  id: string;
  title: string;
  image: string | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "webConfig".
 */
export interface WebConfig {
  id: string;
  Logo: string | Media;
  IdDeLaPaginaDeInicio: string;
  NavBarLinks?:
    | {
        Section: string;
        idSection: string;
        id?: string | null;
      }[]
    | null;
  SocialLinks: {
    title: string;
    url: string;
    icon: string;
    id?: string | null;
  }[];
  Email: string;
  title: string;
  description: string;
  ScriptsHeader?: Script[] | null;
  ScriptsFooter?: Script[] | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "script".
 */
export interface Script {
  ScriptHTML: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'script-html';
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}